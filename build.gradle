plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'

	id 'jacoco'
}

group = 'com.nivlalulu'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// basic setup
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// DB Drivers + Versioning
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'
	testImplementation 'com.h2database:h2'

	// Json Web Tokens
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

jacoco {
	toolVersion = "0.8.12"
}
jacocoTestReport {
	group "Reporting"
	dependsOn test
	reports {
        xml.required = true
        html.required = true
	}
}
tasks.named('test') {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', 'test'

	testLogging {
		showStandardStreams = true
		events 'passed', 'skipped', 'failed'
	}
}
