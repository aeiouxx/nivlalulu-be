name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Execute permissions
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -x test


      # If tests fail for a PR, the whole pipeline will fail, if we're on master branch, procceed  to reports generation
      - name: Test
        id: test_results
        continue-on-error: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          ./gradlew test

      # Runs only on master branch regardless of previous step outcome
      - name: Deploy report
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && always() }}

        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "Github Actions"

          # Copy coverage report
          mkdir -p gh-pages/code-coverage
          cp -r build/reports/jacoco/test/html/* gh-pages/code-coverage/

          # Copy test reports (JUnit)
          mkdir -p gh-pages/test-reports
          cp -r build/reports/tests/test/* gh-pages/test-reports/

          cd gh-pages
          # Make a simple index to navigate between code coverag and test reports.
          cat > index.html <<EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Project Reports</title>
          </head>
          <body>
              <h1>Project Reports</h1>
              <ul>
                  <li><a href="code-coverage/index.html">Code Coverage Report</a></li>
                  <li><a href="test-reports/index.html">Test Reports</a></li>
              </ul>
          </body>
          </html>
          EOF

          # Orphan branch for gh-pages if nonexistend
          git init
          git checkout --orphan gh-pages
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

          git add *
          git commit -m "Deploy reports to github pages"
          git push --force origin gh-pages
          
          cd ..
          rm -rf gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Process test results
        if: steps.test_results.outcome == 'failure'
        run: |
          echo "Tests failed, please check the logs"
          exit 1

      - name: Bump superproject commits
        if: github.ref == 'refs/heads/master' && steps.test_results.outcome == 'success'
        run: |
          mkdir superproject
          cd superproject
          git clone https://x-access-token:${{ secrets.BUMP_TOKEN }}@github.com/aeiouxx/nivlalulu .
          ls -lha
          git submodule update --init --remote backend
          cd backend
          git checkout $GITHUB_SHA
          cd ..
          git add backend
          git commit -m "Update commit version [skip ci]"
          git push origin master
